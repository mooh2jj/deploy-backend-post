name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REPOSITORY_NAME: deploy-backend-post

    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > ./.env

      - name: Gradle로 빌드하기
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: 빌드 결과물 업로드
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/libs
            .env
            src
            build.gradle
            settings.gradle
            gradlew
            gradlew.bat
            gradle

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 빌드 결과물 다운로드
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: 테스트 실행
        run: |
          chmod +x ./gradlew
          ./gradlew test

      - name: 테스트 결과 업로드
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/reports/tests

  deploy:
    needs: test
    runs-on: ubuntu-latest
    env:
      REPOSITORY_NAME: deploy-backend-post

    steps:
      - name: 빌드 결과물 다운로드
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: EC2 디렉토리 권한 설정
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            mkdir -p /home/ubuntu/${{ env.REPOSITORY_NAME }}
            sudo chown -R ubuntu:ubuntu /home/ubuntu/${{ env.REPOSITORY_NAME }}
            sudo chmod -R 775 /home/ubuntu/${{ env.REPOSITORY_NAME }}

      - name: EC2에 JAR 파일 및 설정 파일 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "build/libs/*SNAPSHOT.jar,.env"
          target: "/home/ubuntu/${{ env.REPOSITORY_NAME }}"
          strip_components: 0
          overwrite: true

      - name: SSH로 EC2에 접속하여 애플리케이션 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          timeout: 60s
          script: |
            cd /home/ubuntu/${{ env.REPOSITORY_NAME }}
            sudo chown -R ubuntu:ubuntu .

            # 이미 애플리케이션 중지
            sudo fuser -k -n tcp 8080 || true

            # 애플리케이션 백그라운드로 실행하고 즉시 종료
            # 표준 출력은 app.log에, 표준 에러는 error.log에 각각 분리
            sudo nohup java -jar build/libs/*SNAPSHOT.jar > app.log 2> error.log </dev/null & disown
            echo "애플리케이션이 백그라운드에서 실행되었습니다."
