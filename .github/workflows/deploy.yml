name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REPOSITORY_NAME: deploy-backend-post

    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > ./.env

      - name: Gradle로 빌드하기
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: EC2에 JAR 파일 및 설정 파일 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "build/libs/*SNAPSHOT.jar,.env"
          target: "/home/ubuntu/${{ env.REPOSITORY_NAME }}"
          strip_components: 0
          overwrite: true

      - name: SSH로 EC2에 접속하여 애플리케이션 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd /home/ubuntu/${{ env.REPOSITORY_NAME }}
            sudo chown -R ubuntu:ubuntu .

            # 파일 이동
            sudo mv .env /home/ubuntu/${{ env.REPOSITORY_NAME }}/.env

            sudo fuser -k -n tcp 8080 || true
            nohup java -jar build/libs/*SNAPSHOT.jar 2>&1 &
